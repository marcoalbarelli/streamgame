{% extends 'layout.twig' %}

{% block body %}
  <h1>{{title}}</h1>
  <p>Welcome to {{title}}</p>

    <div id="bevr_demo_app" style="position: relative; overflow: hidden;height: 250px; width:100%; background-color: #bbb;">
        <div id="beer_glass" style="position:absolute; z-index: 1;top: 0px; left: 0px; background: transparent url('/images/glass.png') no-repeat;height: 250px; width:198px; ">

        </div>
        <div id="beer"  :style="beerStyle">
        </div>



        <div id="pad" :style="padStyle" v-on:mousemove="padIt">

        </div>

        <div :style="leakStyle" v-on:click="leakIt"><input type="submit" value="leakit"/> </div>

    </div>

{% endblock %}


{% block javascript %}
    <script type="text/javascript" src="https://unpkg.com/vue"></script>
    <script type="text/javascript">
        const commonHeight = '250px'
        //Vue app
        const bevrApp = new Vue({
            el: '#bevr_demo_app',
            data: {
                glassHasBeenFilled: false,
                leakStyle: {
                    position: 'absolute',
                    right:'50%',
                    width: '100px'
                },
                padStyle: {
                    position: 'absolute',
                    right: '0px',
                    width: '400px',
                    height: commonHeight,
                    backgroundColor: '#444',
                },
                beerStyle: {
                    position: 'absolute',
                    top: '250px',
                    left: '0px',
                    backgroundColor: '#ff00ff',
                    width: '198px',
                    height: commonHeight,
                    backgroundImage: `url('/images/beer.jpg')`,
                    backgroundPosition: '0% 0%',
                    backgroundRepeat: 'no-repeat'
                }
            },
            methods: {
                padIt: (arg) => {
                    if(bevrApp.glassHasBeenFilled) {
                        console.log('Been there, done that')
                    } else {
                        ws.send(1)
                    }
                },
                leakIt: () => {
                    ws.send('leak')
                }
            }
        });
    </script>
    <script type="text/javascript">
        const ws = new WebSocket('ws://localhost:3000/ws/echo')

        ws.onopen = () => {
            ws.send('something')
        }

        ws.onmessage = (event) => {
            // flags.binary will be set if a binary data is received.
            // flags.masked will be set if the data was masked.
            if(event.data === 'glassHasBeenFilled') {
                bevrApp.glassHasBeenFilled = true
                console.log('It\' been slightly easier than finishing Dark Souls III ');
            } else {
                //Hardcoded values will save the world
                bevrApp.beerStyle.top = `${Math.max(15, (230 - event.data/10))}px`;
            }
        }
    </script>
{% endblock %}
